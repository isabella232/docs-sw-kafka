---
title: Provision and Bind New Kafka Service
---

<<<<<<< HEAD
Stark & Wayne Kafka allows all Pivotal Cloud Foundry users to create and use
Kafka within their applications. Applications can then use any Kafka library
to publish or subscribe to the Kafka topic.
=======
Stark & Wayne Kafka allows all Pivotal Cloud Foundry&reg; users to create and use
Kafka within their applications. Applications can then use any Kafka library
to publish/subscribe to the Kafka topic.
>>>>>>> returning 'uri' to credentials

## <a id="provision"></a>Provision & Bind

Create a new Kafka topic using the `cf create-service` (or `cf cs` alias):

<pre class="terminal">
cf create-service sw-kafka topic myapp-kafka
</pre>

You can share the Kafka topic with one or more applications within the same Cloud Foundry "space".

<pre class="terminal">
cf bind-service myapp myapp-kafka
</pre>

Applications have access to the connection information when they are next pushed, restarted, or restaged.

<pre class="terminal">
cf restart myapp
</pre>

## <a id="credentials"></a>Credentials

The Kafka connection credentials pass
 to your application via environment variables, specifically [`$VCAP_SERVICES`](https://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html#VCAP-SERVICES).

Either use a JSON parser or find a language-specific community Cloud Foundry
library to make navigating this environment variable easy.

See the [Language Examples](lang-examples.html) for samples of looking up/using the credentials.

The `credentials` section contains the following keys:

<pre class="terminal">
json
{
  "hostname": "10.213.10.35:9092,10.213.10.36:9092,10.213.10.34:9092",
  "topicName": "67f85c81-ee6f-4791-b169-864f2e18d929",
  "uri": "kafka://10.213.10.35:9092,10.213.10.36:9092,10.213.10.34:9092/67f85c81-ee6f-4791-b169-864f2e18d929",
  "zkPeers": "10.213.10.31:2181,10.213.10.32:2181,10.213.10.33:2181"
}
</pre>

## <a id="delete"></a> Delete

When you no longer want your Kafka topic, delete it with the following command:

<pre class="terminal">
cf delete-service myapp-kafka
</pre>
